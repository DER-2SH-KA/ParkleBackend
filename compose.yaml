services:
  spring:
    build: .
    # image: parkle
    container_name: app_parkle
    expose:
      - "8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_SECURITY_BCRYPT_STRENGTH: ${SPRING_SECURITY_BCRYPT_STRENGTH}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
    depends_on:
      postgres:
        condition: service_healthy
        restart: true

  postgres:
    image: postgres:16.9
    container_name: postgres_parkle
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  
  nginx:
    image: nginx:latest
    container_name: nginx_parkle
    ports:
    - "80:80"
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
    - spring

volumes:
  postgres_data:
  nginx_data:
